"""empty message

Revision ID: d01aab37b566
Revises:
Create Date: 2022-11-25 20:05:19.294413

"""
from alembic import op
import sqlalchemy as sa


import os
environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")

# revision identifiers, used by Alembic.
revision = 'd01aab37b566'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('firstname', sa.String(
                        length=50), nullable=False),
                    sa.Column('lastname', sa.String(
                        length=50), nullable=False),
                    sa.Column('username', sa.String(
                        length=50), nullable=False),
                    sa.Column('email', sa.String(length=255), nullable=False),
                    sa.Column('hashed_password', sa.String(
                        length=255), nullable=False),
                    # sa.Column('created_at', sa.DateTime(), nullable=False),
                    # sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.PrimaryKeyConstraint('id'),
                    sa.UniqueConstraint('email'),
                    sa.UniqueConstraint('username')
                    )
    if environment == "production":
        op.execute(f"ALTER TABLE users SET SCHEMA {SCHEMA};")

    op.create_table('addresses',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('street', sa.String(length=255), nullable=False),
                    sa.Column('city', sa.String(length=50), nullable=False),
                    sa.Column('state', sa.String(length=50), nullable=False),
                    sa.Column('zip', sa.String(length=10), nullable=False),
                    sa.Column('country', sa.String(length=50), nullable=False),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    if environment == "production":
        op.execute(f"ALTER TABLE addresses SET SCHEMA {SCHEMA};")

    op.create_table('orders',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    # sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    if environment == "production":
        op.execute(f"ALTER TABLE orders SET SCHEMA {SCHEMA};")

    op.create_table('products',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('seller_id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=255), nullable=False),
                    sa.Column('category', sa.String(
                        length=255), nullable=False),
                    sa.Column('price', sa.Float(), nullable=False),
                    sa.Column('brand', sa.String(length=255), nullable=False),
                    sa.Column('about', sa.String(length=2000), nullable=False),
                    sa.Column('detail', sa.String(
                        length=2000), nullable=False),
                    sa.Column('dimension', sa.String(
                        length=100), nullable=False),
                    sa.Column('weight', sa.Float(), nullable=False),
                    sa.Column('quantity', sa.Integer(), nullable=False),
                    # sa.Column('created_at', sa.DateTime(), nullable=False),
                    # sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.ForeignKeyConstraint(['seller_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    if environment == "production":
        op.execute(f"ALTER TABLE products SET SCHEMA {SCHEMA};")

    op.create_table('carts',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('product_id', sa.Integer(), nullable=False),
                    sa.Column('quantity', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    if environment == "production":
        op.execute(f"ALTER TABLE carts SET SCHEMA {SCHEMA};")

    op.create_table('favorites',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('product_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    if environment == "production":
        op.execute(f"ALTER TABLE favorites SET SCHEMA {SCHEMA};")

    op.create_table('order_items',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('order_id', sa.Integer(), nullable=False),
                    sa.Column('product_id', sa.Integer(), nullable=False),
                    sa.Column('quantity', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['order_id'], ['orders.id'], ),
                    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    if environment == "production":
        op.execute(f"ALTER TABLE order_items SET SCHEMA {SCHEMA};")

    op.create_table('product_imgs',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('product_id', sa.Integer(), nullable=False),
                    sa.Column('url', sa.String(), nullable=False),
                    sa.Column('preview', sa.Boolean(), nullable=True),
                    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    if environment == "production":
        op.execute(f"ALTER TABLE product_imgs SET SCHEMA {SCHEMA};")

    op.create_table('reviews',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('user_id', sa.Integer(), nullable=False),
                    sa.Column('product_id', sa.Integer(), nullable=False),
                    sa.Column('stars', sa.Integer(), nullable=False),
                    sa.Column('title', sa.String(length=100), nullable=False),
                    sa.Column('review', sa.String(
                        length=2000), nullable=False),
                    sa.Column('created_at', sa.DateTime(), nullable=False),
                    # sa.Column('updated_at', sa.DateTime(), nullable=False),
                    sa.ForeignKeyConstraint(['product_id'], ['products.id'], ),
                    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    if environment == "production":
        op.execute(f"ALTER TABLE reviews SET SCHEMA {SCHEMA};")

    op.create_table('review_imgs',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('review_id', sa.Integer(), nullable=False),
                    sa.Column('url', sa.String(), nullable=False),
                    sa.ForeignKeyConstraint(['review_id'], ['reviews.id'], ),
                    sa.PrimaryKeyConstraint('id')
                    )
    if environment == "production":
        op.execute(f"ALTER TABLE review_imgs SET SCHEMA {SCHEMA};")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('review_imgs')
    op.drop_table('reviews')
    op.drop_table('product_imgs')
    op.drop_table('order_items')
    op.drop_table('favorites')
    op.drop_table('carts')
    op.drop_table('products')
    op.drop_table('orders')
    op.drop_table('addresses')
    op.drop_table('users')
    # ### end Alembic commands ###
